name: hotrod-writes

# Just connect to first server, it will give us the whole list
hotrod:
- uri: hotrod://{{ user }}:{{ pass }}@{{ groups['server'][0] }}:11222
  caches:
  - {{ cache_name }}

# List of agents the Controller should deploy
agents:
{% for agent in groups[hyperfoil_agent_group] %}
  {{ agent }}:
    name: "{{ hostvars[agent]['inventory_hostname'] }}:{{ hyperfoil_agent_port }}"
    {% if ssh_key is defined -%}
    sshKey: "{{ ssh_key }}"
    {% endif -%}
    extras: "{{ java_options | default(agent_java_args | default('')) }}"
{% endfor %}

phases:
- rampupPut:
    increasingRate:
      duration: 30s
      initialUsersPerSec: 2
      targetUsersPerSec: 200
      maxSessions: 200
      isWarmup: true
      scenario: &put
      - putData:
        - randomInt: cacheKey <- 1 .. {{ number_entries }}
        - randomUUID: cacheValue
        - hotrodRequest:
            put: {{ cache_name }}
            key: key-${cacheKey}
            value: value-${cacheValue}

- writes10to100:
    increasingRate:
      startAfter: rampupPut
      duration: 4m
      initialUsersPerSec: {{ 10 * groups[hyperfoil_agent_group] | length }}
      targetUsersPerSec: {{ 100 * groups[hyperfoil_agent_group] | length }}
      maxSessions: {{ 2 * 100 * groups[hyperfoil_agent_group] | length }}
      scenario: *put
